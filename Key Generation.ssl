to generate keys: openssl genrsa -out private_key.pem 2048
This command creates a 2048-bit RSA key, called "private_key.pem". The name of the key is specified after the "-out" flag, and typically ends in ".pem". The number of bits is specified with the last argument. To view your new private key, use "cat" to print it to the screen, just like any other file:

private key



openssl rsa -in private_key.pem -outform PEM -pubout -out public_key.pem

cat public_key.pem
to view the public key same way as the private key


echo 'This is a secret message, for authorized parties only' > secret.txt
Encryption 

Then, to encrypt the file using your public key, enter this command:

openssl rsautl -encrypt -pubin -inkey public_key.pem -in secret.txt -out secret.enc
nano ~/secret.enc
To exit from the nano editor, use the command Ctrl-X.
openssl rsautl -decrypt -inkey private_key.pem -in secret.enc

To create a hash digest of the message, enter this command:

openssl dgst -sha256 -sign private_key.pem -out secret.txt.sha256 secret.txt

sha256 hash digest
With this file, anyone can use your public key and the hash digest to verify that the file hasn't been modified since you created and hashed it. To perform this verification, enter this command:

openssl dgst -sha256 -verify public_key.pem -signature secret.txt.sha256 secret.txt
Md5sum is a hashing program that calculates and verifies 128-bit MD5 hashes.
shasum
